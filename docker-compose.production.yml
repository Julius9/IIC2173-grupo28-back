version: '3.8'

services:
  api:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-api:latest
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}

  auth:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-auth:latest
    ports:
      - "3003:3003"
    networks:
      - app-network
    depends_on:
      - api
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}

  database:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-database:latest
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  mqtt-client:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-mqtt-client:latest
    networks:
      - app-network
    depends_on:
      - api

  job-master:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-job-master:latest
    ports:
      - "4004:4004"
    networks:
      - app-network
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - MASTER_PORT=4004
      - JWT_SECRET=${JWT_SECRET}

  worker:
    image: public.ecr.aws/l7f1q4r9/iic2173-g28-worker:latest
    networks:
      - app-network
    depends_on:
      - job-master
    deploy:
      replicas: 3
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - GAPI_KEY=${GAPI_KEY}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASS=${REDIS_PASS}
      - JWT_SECRET=${JWT_SECRET}

networks:
  app-network:
    driver: bridge
