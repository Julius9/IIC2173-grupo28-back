name: Build and Push to ECR

on:
  push:
    branches:
      - main

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          mask-password: "true"

      - name: Build, tag, and push docker images to Amazon ECR Public
        env:
          REGISTRY: ${{steps.login-ecr-public.outputs.registry}}
          REGISTRY_ALIAS: l7f1q4r9
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-api:$IMAGE_TAG -f Dockerfile_api .
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-auth:$IMAGE_TAG -f Dockerfile_auth .
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-database:$IMAGE_TAG -f Dockerfile_db .
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-mqtt-client:$IMAGE_TAG -f Dockerfile_mqtt .
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-job-master:$IMAGE_TAG -f Dockerfile_jobmaster .
          docker build -t $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-worker:$IMAGE_TAG -f Dockerfile_worker .
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-api:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-auth:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-database:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-mqtt-client:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-job-master:$IMAGE_TAG
          docker push $REGISTRY/$REGISTRY_ALIAS/iic2173-g28-worker:$IMAGE_TAG

  deploy-to-ec2:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
          mask-password: "true"

      - name: Zip artifact to deploy
        run: |
          zip -r deploy.zip scripts/ appspec.yml docker-compose.production.yml

      - name: Copy Zip to S3
        run: |
          aws s3 cp deploy.zip s3://iic2173-g28-cd/deploy.zip
      
      - name: Create CodeDeploy Deployment
        id: create-deployment-trigger
        run: |
          deploymentId=$(aws deploy create-deployment --application-name IIC2173-g28-back --deployment-group-name group-iic2173 --region us-east-1 --s3-location bucket=iic2173-g28-cd,key=deploy.zip,bundleType=zip --description "Automatic deployment from githubactions commit ${{github.sha}}" | jq -r '.deploymentId')
          echo "DeploymentId=$deploymentId" >> $GITHUB_OUTPUT
    
      - name: Wait for deployment to finish
        run: |
          aws deploy wait deployment-successful --deployment-id ${{ steps.create-deployment-trigger.outputs.deploymentId }} --region us-east-1
